Wat deed ik ook alweer?
=> adaptief functies benaderen dmv polynomen
=> adaptief: inzoomen daar waar het probleem moeilijk is
=> dit alles adhv. twee algoritmes van Peter Binev (2004 en 2013)

2004
=> n in N vast, f: [a,b] -> R met partitie P = \{ [a,b] \}
==> leg over elk elt in P het best benaderende polynoom van graad n
==> kies een slim elt om te subdividen (dit doet algo)
==> nieuwe partitie, herhaal
=> tree-generating algorithm

Voorbeeld voorbeeld voorbeeld

2013
=> idee: n niet vast maar variabel per elt uit partitie
==> leg over elk elt in P het best benaderende polynoom van graad n
==> kies een slim elt om te subdividen (dit doet algo)
==> OF verhoog polynomiale graad daar
==> nieuwe partitie, herhaal

Voorbeeld voorbeeld voorbeeld

Wat heb ik gedaan?
=> paar pagina's tex erin pleuren
=> 1d-implementatie in Python

Schets hoofdstukken
=> zie inf praatje

Wat ga ik nog doen?
=> week 17-21: 2d-implementatie; verslag t/m H2 "af"
=> week 23-24: implementatie in C
=> week 25-29: verslag; uitbreiding/toepassing bekijken
